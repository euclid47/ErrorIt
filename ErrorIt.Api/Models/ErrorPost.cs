using ErrorIt.Api.Interfaces;
using System.Collections.Generic;

namespace ErrorIt.Api.Models
{
	/// <summary>
	/// Error Response class based on RFC 7807, https://tools.ietf.org/html/rfc7807
	/// </summary>
	public class ErrorPost : IErrorRestBase
	{
		/// <summary>
		/// A URI reference [RFC3986] that identifies the
		/// problem type.This specification encourages that, when
		/// dereferenced, it provide human-readable documentation for the
		/// problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When 
		/// this member is not present, its value is assumed to be
		/// "about:blank".
		/// </summary>
		public string Type { get; set; }

		/// <summary>
		/// A short, human-readable summary of the problem
		/// type.It SHOULD NOT change from occurrence to occurrence of the
		/// problem, except for purposes of localization(e.g., using
		/// proactive content negotiation.
		/// </summary>
		public string Title { get; set; }

		/// <summary>
		///  The HTTP status code generated by the origin server for this occurrence of the problem.
		/// </summary>
		public int Status { get; set; }

		/// <summary>
		/// A human-readable explanation specific to this occurrence of the problem.
		/// </summary>
		public string Detail { get; set; }

		/// <summary>
		/// A URI reference that identifies the specific occurrence of the problem.
		/// It may or may not yield further information if dereferenced.
		/// </summary>
		public string Instance { get; set; }

		/// <summary>
		/// A user defined list of additional information. Not in spec for RFC 7807.
		/// </summary>
		public List<KeyValuePair<string, object>> Meta { get; set; } = new List<KeyValuePair<string, object>>();

		/// <summary>
		/// An user definaed application level error code. Not in spec for RFC 7807.
		/// </summary>
		public string ApplicationErrorCode { get; set; }
	}
}
